/*
 * Copyright (C) 2024 - 2025 NVIDIA CORPORATION & AFFILIATES
 * Copyright (C) 2021 - 2024 AdaCore
 *
 * Permission is granted to copy, distribute and/or modify this document
 * under the terms of the GNU Free Documentation License, Version 1.3 or
 * any later version published by the Free Software Foundation; with the
 * Invariant Sections being "Attribution", with no Front-Cover
 * Texts, and no Back-Cover Texts.  A copy of the license is included in
 * the section entitled "GNU Free Documentation License".
 */

/*
 * The fields 'text', 'row', and 'applies' are all:
 *   (C)ISO. This material is reproduced from ISO 26262, with permission of
 *   the American National Standards Institute (ANSI) on behalf of the
 *   International Organization for Standardization. All rights reserved.
 */

package ISO_26262_Tracing
import Steps

tuple ISO_Reference {
  part               Integer

  separator @
  chapter            Integer

  separator :
  sec                Integer

  separator :
  subsec    optional Integer

  separator :
  subsubsec optional Integer
}

type Tracing {
  ref                ISO_Reference
  subref    optional String
  text      optional String /* Field text is subject to the ISO attribution */
  row       optional String /* Field row is subject to the ISO attribution */
  applies   optional String /* Field applies is subject to the ISO attribution */

  steps     optional Steps.ID [1 .. *]
  alt_steps optional String
  ref_steps optional Tracing [1 .. *]

  just      optional String

  same_as   optional Tracing
}

checks Tracing {
  text != null or row != null,
     "either text or table row is required"

  subref != null implies not matches(subref, ".*\n.*"),
     "must not contain newlines", subref

  row != null implies applies != null,
     "asil applicability required", row

  row == null implies applies == null,
     "only table rows may indicate applicability", applies

  applies != null implies len(applies) in 1 .. 4,
     "asil applicability must be precisely 1 to 4 characters long", applies

  applies != null implies matches(applies, "[abcdABCD]{1,4}"),
     "asil applicability must only contain a-d letters", applies

  same_as != null implies (steps == null and
			   alt_steps == null and
			   just == null),
    "same_as reference precludes steps/alt_steps and justification", same_as

  same_as != null xor just != null,
     "justification or same_as reference must be provided"
}
