Forbidden_Attributes:Initialized,Needed to identify cases where manual review is required for GNATprove assumption [SPARK_INITIALIZED_ATTRIBUTE]
Forbidden_Pragmas:Validity_Checks,Required because pragma Validity_Checks is not safety-certified
Forbidden_Pragmas:Ignore_Pragma,Required because pragma Ignore_Pragma can cause SPARK to be silently disabled.
Metrics_Cyclomatic_Complexity:10 (to be enforced on non-proven code only),"Required for non-proven code (code that is not SPARK_Mode => On and code that is annotated with Skip_Proof or Skip_Flow_And_Proof) for compliance with ISO 26262-6:2018, Table 1 row 1a ""Enforcement of low complexity"" and 8.4.5d ""simplicity"".

Note: This process does not enforce McCabe cyclomatic complexity limits on proven SPARK executable bodies because it is neither effective for reducing risk nor necessary for compliance with ISO 26262.

* The enforcement of low complexity in proven SPARK code is not effective for reducing risk because (1) the use of GNATprove on SPARK executable bodies significantly reduces the risk of complexity-induced systematic faults, (2) complexity metrics are a poor metric for comprehensibility, and (3) comprehensibility is already verified in the Inspect_Implementation step.
* The enforcement of low complexity in proven SPARK code is not necessary for compliance with ISO 26262 because the recommendation to enforce low complexity in programming languages is given in ISO 26262-6:2018, 5.4.3 in the context of mitigating programming language deficiencies relative to the criteria specified in ISO 26262-6:2018, 5.4.2, which SPARK largely excels at. Moreover, the aforementioned recommendation is accompanied by a footnote acknowledging ""an appropriate compromise of this topic with other requirements of this document may be required"" (ISO 26262-6:2018, Table 1, footnote a), and it is frequently the case that compliance with cyclomatic complexity limits actually reduces the comprehensibility of code (e.g., obfuscation of algorithms through refactoring into smaller subprograms).

Note: AdaCore recommends scrutinizing executable bodies with McCabe cyclomatic complexities greater than 10 because this is the practice AdaCore uses for its own certified Ada runtime libraries."
SPARK_Procedures_Without_Globals,Required to flag SPARK procedure declarations with no Global aspect (see note in Capture_Requirements step)
Restrictions:Max_Protected_Entries=>0,Needed to identify cases where manual review is necessary for GNATprove assumption [SPARK_OVERRIDING_AND_TASKING]
Restrictions:No_Floating_Point,Needed to identify cases where manual review is necessary for GNATprove assumption [SPARK_FLOATING_POINT]
Restrictions:No_Protected_Types,Needed to identify cases where manual review is necessary for GNATprove assumption [SPARK_OVERRIDING_AND_TASKING]
Restrictions:No_Specification_Of_Aspect=>Iterable,Needed to identify cases where manual review is necessary for GNATprove assumptions [SPARK_ITERABLE] and [SPARK_ITERABLE_FOR_PROOF]
Restrictions:No_Use_Of_Entity=>Ada.Task_Identification.Current_Task,Needed to identify cases where manual review is necessary for [SPARK_OVERRIDING_AND_TASKING]
Restrictions:No_Use_Of_Entity=>Synchronous_Task_Control,Needed to identify cases where manual review is necessary for [SPARK_OVERRIDING_AND_TASKING]
Goto_Statements:Only_Unconditional,"Required for compliance with ISO 26262-6:2018, Table 6, row 1i ""No unconditional jumps"""
